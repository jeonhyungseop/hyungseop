package kr.or.ddit.cfms.head.limit.service;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;

import kr.or.ddit.cfms.commons.vo.ComCodeGrpVO;
import kr.or.ddit.cfms.commons.vo.PagingVO;
import kr.or.ddit.cfms.head.deposit.service.HeadDepositServiceImpl;
import kr.or.ddit.cfms.head.inven.dao.IHeadInvenDAO;
import kr.or.ddit.cfms.head.limit.dao.IHeadLimitDAO;
import kr.or.ddit.cfms.head.limit.vo.OrdersVO;
import kr.or.ddit.cfms.head.limit.vo.OrdlistVO;

/**
 * @author 배수진
 * @since 2021. 6. 1
 * @version 1.0
 * @see javax.servlet.http.HttpServlet
 * <pre>
 * [[개정이력(Modification Information)]]
 * 수정일                          수정자               수정내용
 * --------     --------    ----------------------
 * 2021. 6. 1      배수진       최초작성
 * Copyright (c) 2021 by DDIT All right reserved
 * </pre>
 */
@Service
public class HeadLimitServiceImpl implements IHeadLimitService {
	private static Logger logger = LoggerFactory.getLogger(HeadDepositServiceImpl.class);
	
	private IHeadLimitDAO limitDAO;
	private IHeadInvenDAO codeDAO; 
	
	@Inject
	public void setCodeDAO(IHeadInvenDAO codeDAO) {
		this.codeDAO = codeDAO;
		logger.info("주입된 codeDAO : {}", codeDAO.getClass().getName());
	}


	@Inject
	public void setLimitDAO(IHeadLimitDAO limitDAO) {
		this.limitDAO = limitDAO;
		logger.info("주입된 limitDAO : {}", limitDAO.getClass().getName());
	}
	
	
	
	/**
	 * @param pagingVO
	 * 페이지의 총 갯수 구한 후 datalist를 저장하는 메소드 
	 */
	@Override
	public void selectMainInfo(PagingVO<OrdersVO> pagingVO) {
		
		// 총 페이지 레코드 갯수
		int totalRecord = retirveHeadLimitCount(pagingVO);
		pagingVO.setTotalRecord(totalRecord);
		
		// 조회한 데이터 저장
		List<OrdersVO> ordersList = retirveHeadLimitList(pagingVO);
		pagingVO.setDataList(ordersList);
	}
	
	/**
	 * @param pagingVO	
	 * @return int
	 * 가맹본부에서 조회한 가맹점 발주서의 총 레코드 수
	 */
	@Override
	public int retirveHeadLimitCount(PagingVO<OrdersVO> pagingVO) {
		int count = limitDAO.selectHeadLimitCount(pagingVO);
		if(count == 0) count = 1;
		return count;
	}

	/**
	 *@param pagingVO
	 * @return List<OrdersVO>
	 * 조회 된 가맹점 들의 발주서 리스트
	 */
	@Override
	public List<OrdersVO> retirveHeadLimitList(PagingVO<OrdersVO> pagingVO) {
		return limitDAO.selectHeadLimitList(pagingVO);
	}

	/**
	 * @param code
	 * @return ComCodeGrpVO
	 * 검색에 넣을 공통코드 가져오기
	 */
	@Override
	public ComCodeGrpVO retrieveCodeList(String code) {
		return codeDAO.selectCodeList(code);
	}

	/**
	 * @param orderNo
	 * @return OrdersVO
	 * 주문 상세 조회
	 */
	@Override
	public OrdersVO retriveHeadLimitDetail(String orderNo) {
		
		// 상세정보 가져오기
		OrdersVO orderVO = new OrdersVO();
		orderVO = limitDAO.selectHeadLimitDetail(orderNo);
		
		// prod 상세 정보 가져오기 
		List<OrdlistVO> orderlistVO = limitDAO.selectHeadInvenProd(orderNo);
		orderVO.setOrderlistVO(orderlistVO);
		
		//총 레코드 갯수
		int totalRecode = limitDAO.totalRecode(orderVO);
		orderVO.setTotalRecode(totalRecode);
		
		// 상태코드 맵 만들기 
		Map <String, String> steps = new HashMap<>();
		String step = null;
		String code = null;
		String grp = null;
		if (orderVO.getOrder_sttus_code().equals("B0001")) {
			step = "1";
			code = orderVO.getOrder_sttus_code();
			grp = "ORC";
		}else if (orderVO.getOrder_sttus_code().equals("A0001") && orderVO.getOut_sttus_code() == null) {
			step = "2";
			code = orderVO.getOrder_sttus_code();
			grp = "ORC";
		}else if(orderVO.getOrder_sttus_code().equals("A0001") && orderVO.getOut_sttus_code().equals("B0001")) {
			step = "3";
			code = orderVO.getOut_sttus_code();
			grp = "OSC";
		}else if (orderVO.getOrder_sttus_code().equals("A0001") && orderVO.getOut_sttus_code().equals("A0001") && orderVO.getIn_sttus_code() == null) {
			step = "4";
			code = orderVO.getOut_sttus_code();
			grp = "OSC";
		}else if (orderVO.getOrder_sttus_code().equals("A0001") && orderVO.getOut_sttus_code().equals("A0001") && orderVO.getIn_sttus_code().equals("B0001")) {
			step = "5";
			code = orderVO.getIn_sttus_code();
			grp = "ISC";
		}else if (orderVO.getOrder_sttus_code().equals("A0001") && orderVO.getOut_sttus_code().equals("A0001") && orderVO.getIn_sttus_code().equals("A0001")) {
			step = "6";
			code = orderVO.getIn_sttus_code();
			grp = "ISC";
		}else if (orderVO.getOrder_sttus_code().equals("C0001")) {
			step = "7";
			code = orderVO.getOrder_sttus_code();
			grp = "ORC";
		}else if (orderVO.getOut_sttus_code().equals("C0001")) {
			step = "8";
			code = orderVO.getOut_sttus_code();
			grp = "OSC";
		}else {
			step = "9";
			code = null;
			grp = null;
		}
		
		steps.put("step", step);
		steps.put("code", code);
		steps.put("grp", grp);
		
		orderVO.setSteps(steps);
		
		return orderVO;
	}

	/**
	 * @param orderMap
	 * @return int
	 * 발주 상태 업데이트 
	 */
	@Override
	public int modifyOrder(Map<String, String> orderMap) {
		return limitDAO.updateOrder(orderMap);
	}

	/**
	 * @param orderMap
	 * @return int
	 * 출고 상태 업데이트 
	 */
	@Override
	public int modifyOut(Map<String, String> orderMap) {
		// TODO Auto-generated method stub
		return 0;
	}



	
	

}
