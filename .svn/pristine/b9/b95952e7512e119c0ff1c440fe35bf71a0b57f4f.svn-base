package kr.or.ddit.cfms.head.dayreport.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;
import javax.servlet.http.HttpSession;

import org.apache.commons.lang3.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.cfms.fran.commons.vo.FranchiseVO;
import kr.or.ddit.cfms.head.dayreport.service.IHeadDayReportService;
import kr.or.ddit.cfms.head.dayreport.vo.CustomerorderVO;

/**
 * @author 이진수
 * @since 2021. 5. 19
 * @version 1.0
 * @see javax.servlet.http.HttpServlet
 * <pre>
 * [[개정이력(Modification Information)]]
 * 수정일                          수정자               수정내용
 * --------     --------    ----------------------
 * 2021. 5. 19      작성자명       최초작성
 * Copyright (c) 2021 by DDIT All right reserved
 * </pre>
 */
@Controller
@RequestMapping("/head/dayreport")
public class HeadDayReportController {
	private Logger logger = LoggerFactory.getLogger(HeadDayReportController.class);
	
	@Inject
	private IHeadDayReportService service;
	
	public void init() {
		logger.info("{} 초기화, {} 주입됨.",getClass().getSimpleName(), service.getClass().getSimpleName());
	}
	
	//리스트 조회
	@GetMapping
	public String dayReportList(
			HttpSession session,
			RedirectAttributes rdir,
			Model model
			) {
		/** 파라미터 조회 */
		String headCode = (String)session.getAttribute("code");
		
		/** 결과자료 객체 생성 */
		List<FranchiseVO> franlist = new ArrayList<>();
		
		/** 파라미터 검증 */
		if(StringUtils.isEmpty(headCode) || headCode.length() > 5) {
			rdir.addFlashAttribute("msg", "잘못 된 접근입니다.");
			return "redirect:/";
		}
		/** 서비스 데이터 구성 */
		
		/** 서비스 요청 */
		franlist = service.retriveFranchiseList(headCode);
		
		/** 결과전송*/
		model.addAttribute("franlist", franlist);
		
		
		return "/head/dayreport/dayreportList";
	}
	
	//리스트 비동기 조회
	@RequestMapping(produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseBody
	public Map<String, Object> listForAjax(
			@RequestParam(value="franCode", required = false) String franCode,
			HttpSession session
			){
		/** 파라미터 조회 */
		String headCode = (String)session.getAttribute("code");
		
		/** 결과자료 객체 생성 */
		Map<String, Object> dailyGraph = new HashMap<>();
		
		/** 서비스 데이터 구성 */
		Map<String, String> params = new HashMap<>();
		params.put("headCode", headCode);
		params.put("franCode", franCode);
		
		/** 서비스 요청 */
		List<CustomerorderVO> totalSaleByFran = service.retriveDaySaleList(params);
		
		/** 결과전송*/
		dailyGraph.put("totalSaleByFran", totalSaleByFran);
		
		return dailyGraph;
	}
	
	
	@GetMapping("/detail")
	public String dayReportDetail() {
		return "/head/dayreport/dayreportDetail";
		
	}
}
