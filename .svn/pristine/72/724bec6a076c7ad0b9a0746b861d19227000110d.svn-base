<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.cfms.head.attendance.dao.IHeadAttendanceDAO">


<!-- 검색조건 -->
<sql id="searchFrag">
	<trim prefix="AND">
		<if test="searchMap!=null and @org.apache.commons.lang3.StringUtils@isNotBlank(searchMap.deptSeq)">
			INSTR(EMP.DEPT_SEQ, #{searchMap.deptSeq}) > 0
		</if>
	</trim>
	<trim prefix="AND (" suffix=")" prefixOverrides="OR">
		<if test="searchMap!=null and @org.apache.commons.lang3.StringUtils@isNotBlank(searchMap.dclzCode_01)">
			OR INSTR(DCLZ_SE_CODE, #{searchMap.dclzCode_01}) > 0
		</if>
		<if test="searchMap!=null and @org.apache.commons.lang3.StringUtils@isNotBlank(searchMap.dclzCode_02)">
			OR INSTR(DCLZ_SE_CODE, #{searchMap.dclzCode_02}) > 0
		</if>
		<if test="searchMap!=null and @org.apache.commons.lang3.StringUtils@isNotBlank(searchMap.dclzCode_04)">
			OR INSTR(DCLZ_SE_CODE, #{searchMap.dclzCode_04}) > 0
		</if>
	</trim>
	<trim prefix="AND (" suffix=")" prefixOverrides="AND">
		<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchMap.startDate)">
			AND DCLZ_STDRDE >= TO_DATE(#{searchMap.startDate}, 'YYYY-MM-DD') 
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchMap.endDate)">
			<![CDATA[
			AND DCLZ_STDRDE <= TO_DATE(#{searchMap.endDate}, 'YYYY-MM-DD')
			]]> 
		</if>
	</trim>
</sql>


<resultMap type="DclzVO" id="DclzMap" autoMapping="true">
	<id property="dclz_seq" column="DCLZ_SEQ"/>
	<collection property="employeeList" ofType="EmployeeVO" autoMapping="true">
		<id property="emp_id" column="EMP_ID"/>	
	</collection>
	<collection property="deptList" ofType="DeptVO" autoMapping="true">
		<id property="dept_seq" column="DEPT_SEQ"/>
	</collection>
</resultMap>

<!-- 직원근태 조회 -->
<select id="selectEmpWorkList" parameterType="PagingVO" resultMap="DclzMap">
/*kr.or.ddit.cfms.head.attendance.dao.IHeadAttendanceDAO.selectEmpWorkList*/
SELECT *
   FROM (
    SELECT ROWNUM RNUM, A.*
      FROM(
         SELECT DCLZ_SEQ, DC.EMP_ID, DCLZ_STDRDE, TO_CHAR(ATTEND_TIME, 'HH24:MI')ATTEND_TIME, 
                TO_CHAR(LVFFC_TIME, 'HH24:MI')LVFFC_TIME, WORKTIME_SM, 
                ( SELECT FN_CODENAME('DCLZ_SE_CODE', DCLZ_SE_CODE)
                FROM DUAL)DCLZ_SE_CODE,
                EMP.HEAD_CODE, EMP.DEPT_SEQ, EMP_PASS, EMP.EMP_NM, 
                EMP_ZIPNO, EMP_BAADD, EMP_DEADD, EMP_TELNO, 
                EMP_CELNO, EMP_EMAIL, EMP_BIRTDAY, EMP_ENCPN, 
                EMP_RETDE, EMP_BASE_VCDE, EMP_REMNDR_VCDE, 
                ( SELECT FN_CODENAME('EMP_SE_CODE', EMP_SE_CODE)
                FROM DUAL) EMP_SE_CODE , 
                 ( SELECT FN_CODENAME('EMP_CLSF_CODE', EMP_CLSF_CODE)
                FROM DUAL)EMP_CLSF_CODE,
                EMP_BACC, 
                EMP_BNM, EMP.ATT_FILENO,
                DE.PROFIT_SEQ, DE.DEPT_CODE, DE.DEPT_NM, DE.DEPT_TELNO
           FROM TB_DCLZ DC, TB_EMPLOYEE EMP, TB_DEPT DE
          WHERE EMP.EMP_ID = DC.EMP_ID
			 <include refid="searchFrag" />
            AND EMP.DEPT_SEQ = DE.DEPT_SEQ (+)
            AND EMP.HEAD_CODE = #{head_code, jdbcType=VARCHAR}
          ORDER BY DCLZ_STDRDE DESC 
     )A
 )B
 <![CDATA[
WHERE RNUM >= #{startRow} AND RNUM <= ${endRow}
]]>
</select>


<!-- 직원근태COUNT -->
<select id="selectEmpWorkCount" parameterType="PagingVO" resultType="int">
/*kr.or.ddit.cfms.head.attendance.dao.IHeadAttendanceDAO.selectEmpWorkCount*/
 SELECT COUNT(*)
   FROM (
    SELECT ROWNUM RNUM, A.*
      FROM(
         SELECT DCLZ_SEQ, DC.EMP_ID, DCLZ_STDRDE, ATTEND_TIME, 
                LVFFC_TIME, WORKTIME_SM, DCLZ_SE_CODE,
                HEAD_CODE, DEPT_SEQ, EMP_PASS, EMP_NM, 
                EMP_ZIPNO, EMP_BAADD, EMP_DEADD, EMP_TELNO, 
                EMP_CELNO, EMP_EMAIL, EMP_BIRTDAY, EMP_ENCPN, 
                EMP_RETDE, EMP_BASE_VCDE, EMP_REMNDR_VCDE, 
                EMP_SE_CODE, EMP_CLSF_CODE, EMP_BACC, 
                EMP_BNM, ATT_FILENO
           FROM TB_DCLZ DC, TB_EMPLOYEE EMP
          WHERE EMP.EMP_ID = DC.EMP_ID
          <include refid="searchFrag" />
            AND EMP.HEAD_CODE = #{head_code, jdbcType=VARCHAR}
          ORDER BY DCLZ_STDRDE DESC 
     )A
 )B
</select>

<!-- 직원 출근시간  -->
<select id="selectAttendanceTime" parameterType="DclzVO" resultType="String">
 SELECT TO_CHAR(ATTEND_TIME, 'yyyy/mm/dd hh24:mi') ATTEND_TIME
   FROM TB_DCLZ
  WHERE DCLZ_SEQ = #{dclz_seq, jdbcType=NUMERIC}
</select>


<!-- 직원 퇴근시간 -->
<select id="selectLvffcTime" parameterType="DclzVO" resultType="String">
 SELECT TO_CHAR(LVFFC_TIME, 'yyyy/mm/dd hh24:mi') LVFFC_TIME
   FROM TB_DCLZ
  WHERE DCLZ_SEQ = #{dclz_seq, jdbcType=NUMERIC}
</select>


<!-- 직원 근태시간 -->
<update id="updateAttLvfTime" parameterType="DclzVO">
  UPDATE TB_DCLZ
   SET  WORKTIME_SM = (SELECT ROUND((TO_DATE(TO_CHAR(LVFFC_TIME, 'HH24:MI'), 'HH24:MI') - TO_DATE(TO_CHAR(ATTEND_TIME, 'HH24:MI'),'HH24:MI'))*24)
                        FROM TB_DCLZ
                       WHERE EMP_ID = #{emp_id, jdbcType=VARCHAR}
                         AND DCLZ_SEQ = #{dclz_seq, jdbcType=NUMERIC})
 WHERE DCLZ_SEQ = #{dclz_seq, jdbcType=NUMERIC}
</update>

</mapper>