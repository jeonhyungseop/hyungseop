<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.ddit.cfms.head.notice.dao.IHeadNoticeDao">

  <sql id="searchFrag">
		<trim prefix="WHERE" prefixOverrides="AND" suffixOverrides="OR"> 
			BOARD_DEL_AT='N'
			<trim prefix="AND (" suffix=")">
				<if test="searchMap!=null and @org.apache.commons.lang3.StringUtils@isNotBlank(searchMap.searchWord)">
					<choose>
						<when test="searchMap.searchType eq 'title'">
							INSTR(BOARD_TITLE, #{searchMap.searchWord}) > 0
						</when>
						<when test="searchMap.searchType eq 'writer'">
							INSTR(BOARD_WRITER, #{searchMap.searchWord}) > 0
						</when>
						<when test="searchMap.searchType eq 'content'">
							INSTR(BOARD_CN, #{searchMap.searchWord}) > 0
						</when>
						
						<otherwise>
							INSTR(BOARD_TITLE, #{searchMap.searchWord}) > 0
							OR 
							INSTR(BOARD_WRITER, #{searchMap.searchWord}) > 0
							OR
							INSTR(BOARD_CN, #{searchMap.searchWord}) > 0
						
						</otherwise>
					</choose>
				</if>
			</trim>
			<trim prefix="AND (" suffix=")" prefixOverrides="AND">
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchMap.minDate)">
					AND BOARD_TIME >= TO_DATE(#{searchMap.minDate}, 'YYYY-MM-DD') 
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchMap.maxDate)">
					<![CDATA[
					AND BOARD_TIME <= TO_DATE(#{searchMap.maxDate}, 'YYYY-MM-DD')
					]]> 
				</if>
			</trim>	
		</trim>
	</sql>
	
		<select id="selectBoardCount" parameterType="PagingVO" resultType="int">
		SELECT COUNT(*)
		FROM TB_BOARD
		<include refid="searchFrag"/>
		 AND HEAD_CODE=#{head_code}
		</select>


		<!-- 게시판 목록 조회 -->
		<select id="selectBoardList" resultType="BoardVO" parameterType="PagingVO">
	
	
	SELECT B.*
		FROM (
    SELECT A.*, ROWNUM RNUM
			FROM(
				SELECT BOARD_SEQ,HEAD_CODE, BOARD_TITLE                 
				, BOARD_CN, BOARD_WRITER_TYCODE, BOARD_WRITER    
				, BOARD_TIME,BOARD_HIT ,BOARD_SE_CODE,ATT_FILENO,BOARD_DEL_AT       
				FROM TB_BOARD
				
				 <include refid="searchFrag"/> 
				
				  
				  AND HEAD_CODE=#{head_code}
				ORDER BY BOARD_SEQ DESC)A
                )B 
                <![CDATA[
          WHERE RNUM >= #{startRow} AND RNUM<= #{endRow}
        
          ]]>
       
	</select>

<!-- 	<select id="selectBoard" parameterType="BoardVO" 
		resultType="BoardVO">
		SELECT
		    BOARD_SEQ,   HEAD_CODE, BOARD_TITLE                 
				, BOARD_CN, BOARD_WRITER_TYCODE, BOARD_WRITER    
				, BOARD_TIME,BOARD_HIT ,BOARD_TYCODE       
				FROM TB_BOARD
		
		WHERE BOARD_SEQ = #{bo_no}
	</select> -->
	
	<insert id="insertBoard" parameterType="BoardVO">
 	<selectKey resultType="string" order="BEFORE"  keyProperty="att_fileno">
		SELECT fn_getattfileno() ATT_FILENO
		FROM DUAL
	</selectKey> 
	
		INSERT INTO 
		
		
				TB_BOARD
			
			<!-- <when test="bo_type eq 'NOTICE'">
			NOTICE
			</when> -->
		
	
		 (
		    BOARD_SEQ		   
		    , BOARD_TITLE
		    ,HEAD_CODE
		    , BOARD_WRITER  
		    , BOARD_CN		
	  		 ,ATT_FILENO 
	  		 ,BOARD_SE_CODE
		) VALUES (
		    SEQ_BOARD.NEXTVAL
		    , #{board_title,jdbcType=VARCHAR}
		    ,#{head_code,jdbcType=VARCHAR}
		    , #{board_writer,jdbcType=VARCHAR}
		   
			   , #{board_cn,jdbcType=CLOB}
			   ,#{att_fileno,jdbcType=VARCHAR}
			   ,'A0001'
			   
			  
			
		
		)
	</insert>
	
	<insert id="insertAttatches" parameterType="BoardVO">
	<!-- 	<selectKey resultType="int" keyProperty="attatchno" order="BEFORE">
			SELECT NVL(MAX(TO_NUMBER(ATT_FILENO)), 0) + 1 
			FROM TB_ATTACHFILE
		</selectKey> -->
	<!-- <selectKey resultType="string" order="BEFORE"  keyProperty="att_fileno">
		SELECT fn_getattfileno() ATT_FILENO
		FROM DUAL
	</selectKey> -->

	INSERT ALL
	<foreach collection="attatchList" item="attatch" index="idx">
	INTO TB_ATTACHFILE(
		  ATT_FILENO
		, ATT_SEQ
		,BIZ_SE
		, FILE_PATH
		, FILE_NM
	    , SAVE_FILENM
	    , FILE_TYPE
	    , FILE_SIZE
	    ,UPDATETIME
	    , UPDTIME
	   , UPDATEUSER_ID
	   ,UPDUSER_ID
    )
  
	VALUES (		
		 #{att_fileno,jdbcType=VARCHAR}
		,  #{idx}+1
		,#{attatch.biz_se,jdbcType=VARCHAR}
		, #{attatch.file_path,jdbcType=VARCHAR}
		, #{attatch.file_nm,jdbcType=VARCHAR}
		, #{attatch.save_filenm,jdbcType=VARCHAR}
		, #{attatch.file_type,jdbcType=NUMERIC}
		, #{attatch.file_size,jdbcType=VARCHAR}
		,SYSDATE
		,SYSDATE
		 ,#{attatch.updateuser_id,jdbcType=VARCHAR}
		  ,#{attatch.upduser_id,jdbcType=VARCHAR}
	)
	</foreach>
	SELECT * FROM DUAL
</insert>

	<resultMap type="BoardVO" id="boardMap" autoMapping="true">
		<id property="board_seq" column="BOARD_SEQ"/>
		<collection property="attatchList" ofType="AttachfileVO" autoMapping="true">
			<id property="att_seq" column="ATT_SEQ"/>
		</collection>
	</resultMap>
	
	
<select id="selectBoard" parameterType="BoardVO" resultMap="boardMap">
	SELECT 
	    BOARD_SEQ,
	    HEAD_CODE,
	    BOARD_TITLE,
	    BOARD_CN,
	    BOARD_WRITER_TYCODE,
	    BOARD_WRITER,
	    BOARD_TIME,
	    BOARD_HIT,
	    BOARD_SE_CODE,
	   
	     B.ATT_FILENO ,B.ATT_SEQ,B.FILE_NM,FILE_TYPE
	   FROM TB_BOARD A LEFT OUTER JOIN TB_ATTACHFILE B
	        ON(A.ATT_FILENO=B.ATT_FILENO)
	   WHERE A.BOARD_SEQ=#{board_seq}     
</select>

	<update id="incrementHit" parameterType="int" >
		UPDATE TB_BOARD
		SET
		BOARD_HIT = BOARD_HIT + 1
		WHERE BOARD_SEQ = #{board_seq}
	</update>
   
   	<select id="selectAttatch" parameterType="AttachfileVO" resultType="AttachfileVO">
		SELECT
				 ATT_FILENO
			,    ATT_SEQ
			, BIZ_SE
		    , FILE_PATH
		    , FILE_NM
		    , SAVE_FILENM
		    , FILE_TYPE
		    ,FILE_SIZE
		    ,UPDATETIME
		    ,UPDATEUSER_ID
		    ,UPDTIME
		    ,UPDUSER_ID
		    
		FROM TB_ATTACHFILE
		WHERE ATT_FILENO = #{att_fileno} AND ATT_SEQ = #{att_seq}
	</select>
	
	<delete id="deleteBoard" parameterType="BoardVO">
	
		    UPDATE TB_BOARD
		    SET 
		    BOARD_TITLE = '삭제된 글의 제목'
		    , BOARD_CN = '삭제된 글의 내용'
		    , BOARD_DEL_AT = 'Y'
		    WHERE BOARD_SEQ = #{board_seq}
	</delete>
	
	<select id="selectSaveNamesForDelete" parameterType="BoardVO" resultType="string">
		SELECT SAVE_FILENM
		FROM TB_ATTACHFILE
		WHERE ATT_FILENO = #{att_fileno} AND ATT_SEQ IN 
		<foreach collection="delAttNos" item="attNo" open="(" close=")" separator=",">
			#{attNo}
		</foreach>
		
	</select>
	
	<delete id="deleteAttathes" parameterType="BoardVO">
		DELETE FROM TB_ATTACHFILE
		WHERE ATT_FILENO = #{att_fileno} AND ATT_SEQ IN 
		<foreach collection="delAttNos" item="delNo" open="(" close=")" separator=",">
			#{delNo}
		</foreach>
	</delete>
	
	<update id="updateBoard" parameterType="BoardVO">
		UPDATE TB_BOARD
		    SET
		    BOARD_TITLE 		= #{board_title,jdbcType=VARCHAR}
		    , BOARD_WRITER 	= #{board_writer,jdbcType=VARCHAR}
		    , BOARD_CN 	= #{board_cn,jdbcType=CLOB}   
		WHERE BOARD_SEQ = #{board_seq,jdbcType=NUMERIC}
			
	</update>
	
	<insert id="insertUpdateAttatches" parameterType="BoardVO">
	<selectKey resultType="int" keyProperty="startAttNo" order="BEFORE">
		SELECT NVL(MAX(ATT_SEQ), 0) + 1 
		FROM TB_ATTACHFILE
		WHERE ATT_FILENO =#{att_fileno,jdbcType=VARCHAR}
	</selectKey>
	INSERT ALL
	<foreach collection="attatchList" item="attatch" index="idx">
	INTO TB_ATTACHFILE(
		  ATT_FILENO
		, ATT_SEQ
		,BIZ_SE
		, FILE_PATH
		, FILE_NM
	    , SAVE_FILENM
	    , FILE_TYPE
	    , FILE_SIZE
	    ,UPDATETIME
	    , UPDTIME
	   , UPDATEUSER_ID
	   ,UPDUSER_ID
    )

	VALUES (		
		 #{att_fileno,jdbcType=VARCHAR}
		,  #{startAttNo}+#{idx}
		,#{attatch.biz_se,jdbcType=VARCHAR}
		, #{attatch.file_path,jdbcType=VARCHAR}
		, #{attatch.file_nm,jdbcType=VARCHAR}
		, #{attatch.save_filenm,jdbcType=VARCHAR}
		, #{attatch.file_type,jdbcType=NUMERIC}
		, #{attatch.file_size,jdbcType=VARCHAR}
		,SYSDATE
		,SYSDATE
		 ,#{attatch.updateuser_id,jdbcType=VARCHAR}
		  ,#{attatch.upduser_id,jdbcType=VARCHAR}
	)
	</foreach>
	SELECT * FROM DUAL
</insert>

	<select id="selectHeadCode" parameterType="BoardVO" resultType="string">
		SELECT SAVE_FILENM
		FROM TB_ATTACHFILE
		WHERE ATT_FILENO = #{att_fileno} AND ATT_SEQ IN 
		<foreach collection="delAttNos" item="attNo" open="(" close=")" separator=",">
			#{attNo}
		</foreach>
		
	</select>
	





</mapper>