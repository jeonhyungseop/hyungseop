package kr.or.ddit.cfms.fran.pos.service;

import java.util.List;

import javax.inject.Inject;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;

import kr.or.ddit.cfms.commons.vo.ComCodeVO;
import kr.or.ddit.cfms.fran.pos.controller.PosMenuController;
import kr.or.ddit.cfms.fran.pos.dao.IPosOrderDAO;
import kr.or.ddit.cfms.fran.pos.vo.FranGoodsVO;
import kr.or.ddit.cfms.utils.ImageBase64Util;

/**
 * @author 이진수
 * @since 2021. 6. 17
 * @version 1.0
 * @see javax.servlet.http.HttpServlet
 * <pre>
 * [[개정이력(Modification Information)]]
 * 수정일                          수정자               수정내용
 * --------     --------    ----------------------
 * 2021. 6. 17      이진수       최초작성
 * Copyright (c) 2021 by DDIT All right reserved
 * </pre>
 */
@Service
public class PosOrderServiceImpl implements IPosOrderService{
	private static final Logger logger = LoggerFactory.getLogger(PosOrderServiceImpl.class);
	
	private ImageBase64Util imageBase = new ImageBase64Util();
	
	@Inject
	private IPosOrderDAO posOrderDAO;
	
	@Override
	public List<ComCodeVO> retrieveComCodeList(String head_code) {
		List<ComCodeVO> comCodeList = posOrderDAO.selectComCodeList(head_code);
		return comCodeList;
	}

	@Override
	public List<FranGoodsVO> retrieveFranGoodsList(FranGoodsVO franGoodsVO) {
		List<FranGoodsVO> FranGoodsList = posOrderDAO.selectFranGoodsList(franGoodsVO);
		for(FranGoodsVO franGoods : FranGoodsList) {
			imageBase.imageBase(franGoods.getAttachfileList());
		}
		return FranGoodsList;
	}

}
