package kr.or.ddit.cfms.head.attendance.controller;

import java.util.List;

import javax.inject.Inject;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.cfms.commons.vo.PagingVO;
import kr.or.ddit.cfms.head.attendance.service.IHeadAttendanceService;
import kr.or.ddit.cfms.head.commute.vo.DclzVO;
import kr.or.ddit.cfms.head.employee.controller.EmployeeController;
import kr.or.ddit.cfms.head.employee.service.IHeadEmployeeService;
import kr.or.ddit.cfms.head.employee.vo.DeptVO;

/**
 * @author 이진수
 * @since 2021. 5. 19
 * @version 1.0
 * @see javax.servlet.http.HttpServlet
 * <pre>
 * [[개정이력(Modification Information)]]
 * 수정일                          수정자               수정내용
 * --------     --------    ----------------------
 * 2021. 5. 19      작성자명       최초작성
 * 2021. 6. 10      진예은          근태목록 조회
 * Copyright (c) 2021 by DDIT All right reserved
 * </pre>
 */
@Controller
@RequestMapping("/head/attendance")
public class HeadAttendanceController {

	@Inject
	private IHeadAttendanceService service;
	
	@Inject
	private IHeadEmployeeService empService;
	
	private final static Logger logger = LoggerFactory.getLogger(EmployeeController.class);
	
	
	@GetMapping
	public String analysisList(
			@RequestParam(value="page", required=false, defaultValue="1") int currentPage,
			@RequestParam(value = "selector", required = false, defaultValue = "10") int selectorRow,
			@RequestParam(value="deptSeq", required = false) String deptSeq,
			@RequestParam(value="startDate", required = false) String startDate,
			@RequestParam(value="endDate", required = false) String endDate,
			@RequestParam(value="dclzCode_01", required = false) String dclzCode_01,
			@RequestParam(value="dclzCode_02", required = false) String dclzCode_02,
			HttpSession session,
			Model model
			) {
		String headCode = (String) session.getAttribute("code");
		PagingVO<DclzVO> pagingVO = listForAjax(currentPage, selectorRow, deptSeq, startDate, endDate, dclzCode_01, dclzCode_02, session);
		model.addAttribute("pagingVO", pagingVO);
		
		List<DeptVO> deptList = empService.selectDept(headCode);
		model.addAttribute("deptList", deptList);
		
		return "/head/attendance/attendanceList";
		
	}
	
	@RequestMapping(produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseBody
	public PagingVO<DclzVO> listForAjax(
			@RequestParam(value="page", required=false, defaultValue="1") int currentPage,
			@RequestParam(value = "selector", required = false, defaultValue = "10") int selectorRow,
			@RequestParam(value="deptSeq", required = false) String deptSeq,
			@RequestParam(value="startDate", required = false) String startDate,
			@RequestParam(value="endDate", required = false) String endDate,
			@RequestParam(value="dclzCode_01", required = false) String dclzCode_01,
			@RequestParam(value="dclzCode_02", required = false) String dclzCode_02,
			HttpSession session
			){
		
		String headCode = (String) session.getAttribute("code");
		
		PagingVO<DclzVO> pagingVO = new PagingVO<DclzVO>(selectorRow, 10);
		pagingVO.setCurrentPage(currentPage);
		pagingVO.setHead_code(headCode);
		
		pagingVO.addSearchMap("deptSeq", deptSeq);
		pagingVO.addSearchMap("startDate", startDate);
		pagingVO.addSearchMap("endDate", endDate);
		pagingVO.addSearchMap("dclzCode_01", dclzCode_01);
		pagingVO.addSearchMap("dclzCode_02", dclzCode_02);
		
		int totalRecord = service.selectEmpWorkCount(pagingVO);
		pagingVO.setTotalRecord(totalRecord);
		
		List<DclzVO> dclzList = service.selectEmpWorkList(pagingVO);
		pagingVO.setDataList(dclzList);
		
		
		return pagingVO;
	}
	
	
	

	
}
